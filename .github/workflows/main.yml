# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, feature/github_workflow]
  pull_request:
    branches: [ master, feature/github_workflow ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Update sources 
      uses: actions/checkout@v2 
    - name: Build application image
      run: docker build . --file Dockerfile.app -t serfdanilov/phonebook:2020.beta01-$GITHUB_RUN_NUMBER
    - name: Build tests docker image
      run: docker build -t test_app --file Dockerfile.tests .
    - name: Start application image with smoke test
      run: docker run --env DEBUG_KEY="debug "-t serfdanilov/phonebook:2020.beta01-$GITHUB_RUN_NUMBER
    - name: Start test (step1) Database functionality
      run: docker run --env TEST_CASE="test.TestDatabase" -t test_app
    - name: Start test (step1) Database functionality
      run: docker run --env TEST_CASE="test.TestInterface" -t test_app
    - name: Deploy ready package
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin;   docker push ${{ secrets.DOCKER_USERNAME }}/phonebook:2020.beta01-$GITHUB_RUN_NUMBER
  
  
  codeStyleCheck:
    runs-on: [ubuntu-latest]
    steps:
    - name: Update sources 
      uses: actions/checkout@v2 
    - name: Preparation for testing code style check
      run: pip install pycodestyle; touch /tmp/phonebook-codestyle.txt
    - name: Check main module
      run: python -m pycodestyle ./main.py >> /tmp/phonebook-codestyle.txt 2>&1
      continue-on-error: true
    - name: Check database module
      if: always()
      continue-on-error: true
      run: python -m pycodestyle ./database.py >> /tmp/phonebook-codestyle.txt 2>&1
    - name: Check interface module
      if: always()
      continue-on-error: true
      run: python -m pycodestyle ./core.py >> /tmp/phonebook-codestyle.txt 2>&1
    - name: Publish artifacts
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: codestyle
        path: /tmp/phonebook-codestyle.txt

